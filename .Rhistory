library(readr)
Number_of_jobs_by_Industry_2019 <- read_csv("IV ASMT/Number of jobs by Industry 2019.csv")
View(Number_of_jobs_by_Industry_2019)
library(shiny); runApp('~/IV ASMT3.R')
setwd("~/Desktop/IV ASMT")
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
View(Number_of_jobs_by_Industry_2019)
setwd("~/Desktop/IV ASMT")
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
View(Number_of_jobs_by_Industry_2019)
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
ggplot(industry_data, aes(x = X.Area, y = Total)) +
geom_bar(stat = "identity") +
labs(title = "Total Industry by Area", x = "Area", y = "Total")
library("shiny")
library("leaflet")
library('dplyr')
library("ggplot2")
library("ggiraph")
setwd("~/Desktop/IV ASMT")
industry_data <- read.csv("Number of jobs by Industry 2019.csv", header = TRUE)
ggplot(industry_data, aes(x = X.Area, y = Total)) +
geom_bar(stat = "identity") +
labs(title = "Total Industry by Area", x = "Area", y = "Total")
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
library(ggplot2)
# Your dataset
data <- read.csv("Number of jobs by Industry 2019.csv", header = TRUE)
# Create a bar chart
ggplot(data, aes(x = Area)) +
geom_bar(aes(y = `Agriculture, forestry and fishing`), fill = "blue", stat = "identity", position = "dodge") +
geom_bar(aes(y = Mining), fill = "red", stat = "identity", position = "dodge") +
geom_bar(aes(y = Manufacturing), fill = "green", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Electricity, gas, water and waste services`), fill = "purple", stat = "identity", position = "dodge") +
geom_bar(aes(y = Construction), fill = "orange", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Wholesale trade`), fill = "yellow", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Retail trade`), fill = "cyan", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Accommodation and food services`), fill = "magenta", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Transport, postal and warehousing`), fill = "brown", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Information media and telecommunications`), fill = "gray", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Finance and insurance services`), fill = "pink", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Rental, hiring and real estate services`), fill = "olive", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Professional, scientific and technical services`), fill = "violet", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Administrative and support services`), fill = "lime", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Public administration and safety`), fill = "teal", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Education and training`), fill = "maroon", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Health care and social assistance`), fill = "navy", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Arts and recreation services`), fill = "pink", stat = "identity", position = "dodge") +
geom_bar(aes(y = `Other services`), fill = "purple", stat = "identity", position = "dodge") +
geom_bar(aes(y = Total), fill = "black", stat = "identity", position = "dodge") +
labs(title = "Job Distribution by Area and Industry",
x = "Area",
y = "Job Count",
fill = "Industry") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
runApp('~/IV ASMT3.R')
setwd("~/Desktop/IV ASMT")
industry_data <- read.csv("Number of jobs by Industry 2019.csv", header = TRUE)
industry_data["Area"] = industry_data["X.Area"]
incolumn_names <- names(industry_data)
# Print the column names to the console
print(column_names)
setwd("~/Desktop/IV ASMT")
industry_data <- read.csv("Number of jobs by Industry 2019.csv", header = TRUE)
industry_data["Area"] = industry_data["X.Area"]
column_names <- names(industry_data)
# Print the column names to the console
print(column_names)
##################
column_names <- c("X.Area", "Agriculture..forestry.and.fishing", "Mining", "Manufacturing", "Electricity..gas..water.and.waste.services", "Construction", "Wholesale.trade", "Retail.trade", "Accommodation.and.food.services", "Transport..postal.and.warehousing", "Information.media.and.telecommunications", "Finance.and.insurance.services", "Rental..hiring.and.real.estate.services", "Professional..scientific.and.technical.services", "Administrative.and.support.services", "Public.administration.and.safety", "Education.and.training", "Health.care.and.social.assistance", "Arts.and.recreation.services", "Other.services", "Total")
# Remove dots from column names
new_column_names <- gsub("\\.", "", column_names)
# Now, new_column_names contains the column names without dots
print(new_column_names)
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
install.packages("reshape2")
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
runApp('~/IV ASMT3.R')
library(shiny)
ui <- navbarPage("Fading Navbar",
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
tabPanel("Tab 1", ...),
tabPanel("Tab 2", ...)
)
library(shiny)
ui <- navbarPage("Fading Navbar",
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
tabPanel("Tab 1", ...),
tabPanel("Tab 2", ...)
)
library(shiny)
ui <- navbarPage("Fading Navbar",
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
tabPanel("Tab 1", ...),
tabPanel("Tab 2", ...)
)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
.content {
height: 2000px;  # Just to make the page scrollable
background: linear-gradient(white, grey);  # Gradient for visual effect
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
navbarPage("Fading Navbar",
tabPanel("Tab 1",
div(class = "content"),
p("Scroll to see the navbar fade!")
),
tabPanel("Tab 2",
p("This is Tab 2 content")
)
)
)
server <- function(input, output, session) {}
shinyApp(ui, server)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
.content {
height: 2000px;  # Just to make the page scrollable
background: linear-gradient(white, grey);  # Gradient for visual effect
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
navbarPage("Fading Navbar",
tabPanel("Tab 1",
div(class = "content"),
p("Scroll to see the navbar fade!")
),
tabPanel("Tab 2",
p("This is Tab 2 content")
)
)
)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
.content {
height: 2000px;  # Just to make the page scrollable
background: linear-gradient(white, grey);  # Gradient for visual effect
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
navbarPage("Fading Navbar",
tabPanel("Tab 1",
div(class = "content"),
p("Scroll to see the navbar fade!")
),
tabPanel("Tab 2",
p("This is Tab 2 content")
)
)
)
server <- function(input, output, session) {}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
.content {
height: 2000px;  # Just to make the page scrollable
background: linear-gradient(white, grey);  # Gradient for visual effect
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
navbarPage("Fading Navbar",
tabPanel("Tab 1",
div(class = "content"),
p("Scroll to see the navbar fade!")
),
tabPanel("Tab 2",
p("This is Tab 2 content")
)
)
)
server <- function(input, output, session) {}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.navbar {
transition: opacity 0.5s;
}
.navbar-fade {
opacity: 0.5;
}
.content {
height: 2000px;  # Just to make the page scrollable
background: linear-gradient(white, grey);  # Gradient for visual effect
}
")),
tags$script(HTML("
$(document).ready(function(){
$(window).scroll(function(){
if($(this).scrollTop() > 50){
$('.navbar').addClass('navbar-fade');
} else {
$('.navbar').removeClass('navbar-fade');
}
});
});
"))
),
navbarPage("Fading Navbar",
tabPanel("Tab 1",
div(class = "content"),
p("Scroll to see the navbar fade!")
),
tabPanel("Tab 2",
p("This is Tab 2 content")
)
)
)
server <- function(input, output, session) {}
shinyApp(ui, server)
runApp('~/IV ASMT3.R')
library(shiny); runApp('IV ASMT3.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
runApp('IV ASMT3.R')
runApp('~/Documents/GitHub/IV-Final/a3 2.R')
library(shiny); runApp('a3 2.R')
